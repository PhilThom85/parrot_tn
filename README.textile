h1. ParrotTn

This utility gem enables to translate from local dictionnaries and/or google translator.

Another feature is to translate a yml file, usually an i18n file, into another yaml file with the
same hierarchy.

h2. Installation

Add in Gemfile

gem "parrot_tn", :git => "git://github.com/PhilThom85/parrot_tn.git"

h2. Usage

h3. Command line

In order to translate a text with the help of google translate :

<shell>
bundle exec parrot "My text to translate" en:fr
</shell>

where:
en is source language and fr is destination language

h3. Ruby code

h4. Standard use

This is used to translate a text to another with or without google translation

<ruby>
#...
  guess = ParrotTn::Guess.new :google => true
  puts guess.translation_of "My text to translate", :from => :en, :to => :fr
#...
</ruby>

h4. Convert yaml file

To convert a yaml file, use :

<ruby>
  parser = ParrotTn::ParserYml.new :google => true
  parser.parrotize_yaml "path_to_file", :fr
</ruby>

The resulting file is saved to the current directory but can be changed using :save_to option.
The source file must start with the code language as root, as shown below:

<ruby>
en:
  ...
</ruby>

Usually the file is an i18n file :

<ruby>
en:
  code_a: "House"
  code_b:
    - "Monday"
    - "Tuesday"

</ruby>

will be converted to french for instance, as shown bellow:

<ruby>
fr:
  code_a: "Maison"
  code_b:
    - "Lundi"
    - "Mardi"

</ruby>

h3. Local dictionnaries

These are dictionnaries that are used to hook the google translation. Some words can be bad translated by google,
or need another mean, so it can be possible to define these words with local dicts.
The name and structure of local dictionnary must be defined as :

name : {src_lg}_{dst_lg}_dict_{name}.yml
where:
  # src_lg: source language (en)
  # dst_lg: destination language (fr)
  # name: Dict name (gen)

and inside the file:

<ruby>
en_fr:
  "House": "Maison"
  ...
</ruby>

h2. Next releases

Here is the list of new features planned to be included:

# Database table conversion
# translate messages with '#{}' within the text
# use local dicts from command line
# translate partial word in sentence using local dicts

